-- Copyright (c) 2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.

-- WSO2 Inc. licenses this file to you under the Apache License,
-- Version 2.0 (the "License"); you may not use this file except
-- in compliance with the License.
-- You may obtain a copy of the License at
--
--    http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing,
-- software distributed under the License is distributed on an
-- "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
-- KIND, either express or implied.  See the License for the
-- specific language governing permissions and limitations
-- under the License.

-- WSO2 Message Broker Oracle Database schema --

-- Start of Message Store Tables --

CREATE TABLE MB_CONTENT (
    MESSAGE_ID NUMBER(19),
    CONTENT_OFFSET INT,
    MESSAGE_CONTENT BLOB,
    CONSTRAINT pk_messages PRIMARY KEY (MESSAGE_ID,CONTENT_OFFSET)
)
/
CREATE TABLE MB_QUEUE_MAPPING (
    QUEUE_ID INT,
    QUEUE_NAME VARCHAR2(512) UNIQUE,
    CONSTRAINT PK_MB_QUEUE_MAPPING PRIMARY KEY (QUEUE_ID))
/
CREATE SEQUENCE queue_mapping_sequence START WITH 1 INCREMENT BY 1 NOCACHE
/
CREATE OR REPLACE TRIGGER MB_QUEUE_MAPPING_TRIGGER 
    BEFORE INSERT ON MB_QUEUE_MAPPING
    REFERENCING NEW AS NEW
    FOR EACH ROW
    BEGIN
        SELECT queue_mapping_sequence.nextval INTO :NEW.QUEUE_ID FROM dual;
    END;
/
CREATE TABLE MB_METADATA (
    MESSAGE_ID NUMBER(19),
    QUEUE_ID INT,
    MESSAGE_METADATA RAW(2000),
    CONSTRAINT PK_MB_METADATA PRIMARY KEY (MESSAGE_ID),
    CONSTRAINT FK_MB_METADATA_QUEUE_MAPPING FOREIGN KEY (QUEUE_ID) REFERENCES MB_QUEUE_MAPPING (QUEUE_ID)
)
/
CREATE TABLE MB_EXPIRATION_DATA (
    MESSAGE_ID NUMBER(19) UNIQUE,
    EXPIRATION_TIME NUMBER(19),
    MESSAGE_DESTINATION VARCHAR2(512) NOT NULL,
    CONSTRAINT FK_EXPIRATION_DATA FOREIGN KEY (MESSAGE_ID) REFERENCES MB_METADATA (MESSAGE_ID)
)

-- End of Message Store Tables --

-- Start of Andes Context Store Tables --

/
CREATE TABLE MB_DURABLE_SUBSCRIPTION (
    SUBSCRIPTION_ID VARCHAR2(512) NOT NULL, 
    DESTINATION_IDENTIFIER VARCHAR2(512) NOT NULL,
    SUBSCRIPTION_DATA VARCHAR2(2048) NOT NULL
)
/
CREATE TABLE MB_NODE (
    NODE_ID VARCHAR2(512) NOT NULL,
    NODE_DATA VARCHAR2(2048) NOT NULL,
        CONSTRAINT PK_MB_NODE PRIMARY KEY (NODE_ID)
)
/
CREATE TABLE MB_EXCHANGE (
    EXCHANGE_NAME VARCHAR2(512) NOT NULL,
    EXCHANGE_DATA VARCHAR2(2048) NOT NULL,
    CONSTRAINT PK_MB_EXCHANGE PRIMARY KEY (EXCHANGE_NAME)
)
/
CREATE TABLE MB_QUEUE (
    QUEUE_NAME VARCHAR2(512) NOT NULL,
    QUEUE_DATA VARCHAR2(2048) NOT NULL,
    CONSTRAINT PK_MB_QUEUE PRIMARY KEY (QUEUE_NAME)
)
/
CREATE TABLE MB_BINDING (
    EXCHANGE_NAME VARCHAR2(512) NOT NULL,
    QUEUE_NAME VARCHAR2(512) NOT NULL,
    BINDING_DETAILS VARCHAR2(2048) NOT NULL,
    CONSTRAINT FK_MB_BINDING_EXCHANGE FOREIGN KEY (EXCHANGE_NAME) REFERENCES MB_EXCHANGE (EXCHANGE_NAME),
    CONSTRAINT FK_MB_BINDING_QUEUE FOREIGN KEY (QUEUE_NAME) REFERENCES MB_QUEUE (QUEUE_NAME)
)
/
CREATE TABLE MB_QUEUE_COUNTER (
    QUEUE_NAME VARCHAR2(512) NOT NULL,
    MESSAGE_COUNT NUMBER(19), 
    CONSTRAINT PK_QUEUE_COUNTER PRIMARY KEY (QUEUE_NAME) 
)
/
CREATE TABLE MB_MSG_STORE_STATUS (
    NODE_ID VARCHAR2(512) NOT NULL,
    TIME_STAMP NUMBER(19), 
    CONSTRAINT PK_MSG_STORE_STATUS PRIMARY KEY (NODE_ID, TIME_STAMP) 
)
/
-- End of Andes Context Store Tables --
